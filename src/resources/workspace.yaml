---
!include ../includes.yaml
name: workspace
comment: |
  A _workspace_ is the highest-level organizational unit in Asana. All projects
  and tasks have an associated workspace.

  An _organization_ is a special kind of workspace that represents a company.
  In an organization, you can group your projects into teams. You can read
  more about how organizations work on the Asana Guide.
  To tell if your workspace is an organization or not, check its
  `is_organization` property.

  Over time, we intend to migrate most workspaces into organizations and to
  release more organization-specific functionality. We may eventually deprecate
  using workspace-based APIs for organizations. Currently, and until after
  some reasonable grace period following any further announcements, you can
  still reference organizations in any `workspace` parameter.

properties:

  - name: id
    <<: *PropType.Id
    comment: |
      Globally unique ID of the workspace.

  - name: name
    type: String
    example_values:
      - "'My Favorite Workspace'"
    comment: |
      The name of the workspace.

  - name: is_organization
    <<: *PropType.Bool
    comment: |
      Whether the workspace is an _organization_.

action_classes:
  - name: Get available workspaces
    url: get
  - name: Update a workspace
    url: update
  - name: Typeahead search
    url: typeahead
  - name: User Management
    url: user-mgmt

actions:

  # Create, Retrieve, Update, Delete

  - name: findById
    class: get
    method: GET
    path: "/workspaces/%s"
    params:
      - name: workspace
        <<: *Param.WorkspaceId
        required: true
    comment: |
      Returns the full workspace record for a single workspace.

  - name: findAll
    class: get
    method: GET
    path: "/workspaces"
    collection: true
    comment: |
      Returns the compact records for all workspaces visible to the authorized user.

  - name: update
    class: update
    method: PUT
    path: "/workspaces/%s"
    params:
      - name: workspace
        <<: *Param.WorkspaceId
        required: true
        comment: The workspace to update.
    comment: |
      A specific, existing workspace can be updated by making a PUT request on
      the URL for that workspace. Only the fields provided in the data block
      will be updated; any unspecified fields will remain unchanged.

      Currently the only field that can be modified for a workspace is its `name`.

      Returns the complete, updated workspace record.

  - name: typeahead
    class: typeahead
    method: GET
    path: "/workspaces/%s/typeahead"
    params:
      - name: workspace
        <<: *Param.WorkspaceId
        required: true
        comment: The workspace to fetch objects from.
      - name: type
        type: Enum
        example_values:
          - user
        values:
          - name: custom_field
            comment: A custom field.
          - name: project
            comment: A project.
          - name: tag
            comment: A tag.
          - name: task
            comment: A task.
          - name: user
            comment: A user.
        required: true
        comment: |
          The type of values the typeahead should return. You can choose from
          one of the following: custom_field, project, tag, task, and user.
          Note that unlike in the names of endpoints, the types listed here are
          in singular form (e.g. `task`). Using multiple types is not yet supported.
      - name: query
        type: String
        example_values:
          - Greg
        comment: |
          The string that will be used to search for relevant objects. If an
          empty string is passed in, the API will currently return an empty
          result set.
      - name: count
        type: Number
        example_values:
          - "10"
        comment: |
          The number of results to return. The default is `20` if this
          parameter is omitted, with a minimum of `1` and a maximum of `100`.
          If there are fewer results found than requested, all will be returned.
    collection: true
    collection_cannot_paginate: true
    comment: |
      Retrieves objects in the workspace based on an auto-completion/typeahead
      search algorithm. This feature is meant to provide results quickly, so do
      not rely on this API to provide extremely accurate search results. The
      result set is limited to a single page of results with a maximum size,
      so you won't be able to fetch large numbers of results.

  - name: addUser
    class: user-mgmt
    method: POST
    path: "/workspaces/%s/addUser"
    params:
      - name: workspace
        <<: *Param.WorkspaceId
        required: true
        comment: The workspace or organization to invite the user to.
      - name: user
        <<: *Param.User
        required: true
    comment: |
      The user can be referenced by their globally unique user ID or their email address.
      Returns the full user record for the invited user.

  - name: removeUser
    class: user-mgmt
    method: POST
    path: "/workspaces/%s/removeUser"
    params:
      - name: workspace
        <<: *Param.WorkspaceId
        required: true
        comment: The workspace or organization to invite the user to.
      - name: user
        <<: *Param.User
        required: true
    comment: |
      The user making this call must be an admin in the workspace.
      Returns an empty data record.
