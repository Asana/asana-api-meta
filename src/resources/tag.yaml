---
# See `user.yaml` for more docs on these yaml files.
!include ../includes.yaml
name: tag
comment: |
  A _tag_ is a label that can be attached to any task in Asana. It exists in a
  single workspace or organization.

  Tags have some metadata associated with them, but it is possible that we will
  simplify them in the future so it is not encouraged to rely too heavily on it.
  Unlike tags, tags do not provide any ordering on the tasks they
  are associated with.

properties:

  - name: id
    <<: *PropType.Id

  # TODO more properties

actions:

  # Create, Retrieve, Update, Delete

  - name: create
    method: POST
    path: "/tags"
    params:
      - name: workspace
        <<: *Param.WorkspaceId
        required: true
        comment: The workspace or organization to create the tag in.
    comment: |
      Creates a new tag in a workspace or organization.

      Every tag is required to be created in a specific workspace or
      organization, and this cannot be changed once set. Note that you can use
      the `workspace` parameter regardless of whether or not it is an
      organization.

      Returns the full record of the newly created tag.

  - name: createInWorkspace
    method: POST
    path: "/workspaces/%d/tags"
    params:
      - name: workspace
        <<: *Param.WorkspaceId
        required: true
        comment: The workspace or organization to create the tag in.
    comment: |
      Creates a new tag in a workspace or organization.

      Every tag is required to be created in a specific workspace or
      organization, and this cannot be changed once set. Note that you can use
      the `workspace` parameter regardless of whether or not it is an
      organization.

      Returns the full record of the newly created tag.

  - name: findById
    method: GET
    path: "/tags/%d"
    params:
      - name: tag
        <<: *Param.TagId
        required: true
        comment: The tag to get.
    comment: |
      Returns the complete tag record for a single tag.

  - name: update
    method: PUT
    path: "/tags/%d"
    params:
      - name: tag
        <<: *Param.TagId
        required: true
        comment: The tag to update.
    comment: |
      Updates the properties of a tag. Only the fields provided in the `data`
      block will be updated; any unspecified fields will remain unchanged.

      When using this method, it is best to specify only those fields you wish
      to change, or else you may overwrite changes made by another user since
      you last retrieved the task.

      Returns the complete updated tag record.

  - name: delete
    method: DELETE
    path: "/tags/%d"
    params:
      - name: tag
        <<: *Param.TagId
        required: true
        comment: The tag to delete.
    comment: |
      A specific, existing tag can be deleted by making a DELETE request
      on the URL for that tag.

      Returns an empty data record.

  - name: findAll
    method: GET
    path: "/tags"
    collection: true
    comment: |
      Returns the compact tag records for some filtered set of tags.
      Use one or more of the parameters provided to filter the tags returned.
    params:
      - name: workspace
        <<: *Param.WorkspaceId
        comment: The workspace or organization to filter tags on.
      - name: team
        <<: *Param.TeamId
        comment: The team to filter tags on.
      - name: archived
        <<: *Param.Bool
        comment: |
          Only return tags whose `archived` field takes on the value of
          this parameter.

  - name: findByWorkspace
    method: GET
    path: "/workspaces/%d/tags"
    params:
      - name: workspace
        <<: *Param.WorkspaceId
        required: true
        comment: The workspace or organization to find tags in.
    collection: true
    comment: |
      Returns the compact tag records for all tags in the workspace.
