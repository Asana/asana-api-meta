---
# See `user.yaml` for more docs on these yaml files.
  !include ../includes.yaml
name: workspace_membership
comment: |
  This object determines if a user is a member of a workspace.

properties:

  - name: gid
    <<: *PropType.Gid
    comment: |
      Globally unique ID of the workspace membership.

  - name: resource_type
    <<: *PropType.ResourceType
    comment: |
      The resource type of this resource. The value for this resource is always `workspace_membership`.
    example_values:
      - '"workspace_membership"'
    values:
      - name: workspace_membership
        comment: A workspace membership resource type.

  - name: user
    <<: *PropType.User
    example_values:
      - '{ id: 12345, gid: "12345", name: "Tim Bizarro" }'
    access: Read-only
    comment: |
      The user in the membership.

  - name: workspace
    <<: *PropType.Workspace
    access: Read-only
    comment: |
      The workspace the user is a member of.

  - name: user_task_list
    <<: *PropType.UserTaskList
    access: Read-only
    comment: |
      The user's "My Tasks" in the workspace.

  - name: is_active
    <<: *PropType.Bool
    access: Read-only
    comment: |
      Reflects if this user still a member of the workspace.

  - name: is_admin
    <<: *PropType.Bool
    access: Read-only
    comment: |
      Reflects if this user is an admin of the workspace.

  - name: is_guest
    <<: *PropType.Bool
    access: Read-only
    comment: |
      Reflects if this user is a guest of the workspace.

action_classes:
  - name: Get all memberships for a workspace
    url: get-many-workspace
  - name: Get all workspace memberships for a user
    url: get-many-user
  - name: Get a workspace membership
    url: get-single

actions:
  - name: findByWorkspace
    class: get-many-workspace
    method: GET
    path: "/workspaces/%s/workspace_memberships"
    params:
      - name: workspace
        <<: *Param.WorkspaceGid
        required: true
        comment: The workspace for which to fetch memberships.
      - name: user
        <<: *Param.User
        comment: If present, the user to filter the memberships on.
    collection: true
    comment: |
      Returns the compact workspace membership records for the workspace.

  - name: findByUser
    class: get-many-user
    method: GET
    path: "/users/%s/workspace_memberships"
    params:
      - name: user
        <<: *Param.User
        required: true
        comment: If present, the user to filter the memberships on.
    collection: true
    comment: |
      Returns the compact workspace membership records for the user.

  - name: findById
    class: get-single
    method: GET
    path: "/workspace_memberships/%s"
    params:
      - name: workspace_membership
        <<: *Param.WorkspaceMembershipGid
        required: true
    comment: |
      Returns the workspace membership record.
