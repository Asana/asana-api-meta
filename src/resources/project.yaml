---
# See `user.yaml` for more docs on these yaml files.
!include ../includes.yaml
name: project
comment: |
  A _project_ represents a prioritized list of tasks in Asana. It exists in a
  single workspace or organization and is accessible to a subset of users in
  that workspace or organization, depending on its permissions.

  Projects in organizations are shared with a single team. You cannot currently
  change the team of a project via the API. Non-organization workspaces do not
  have teams and so you should not specify the team of project in a
  regular workspace.

properties:

  - name: archived
    <<: *PropType.Bool
    comment: |
      True if the project is archived, false if not. Archived projects do not
      show in the UI by default and may be treated differently for queries.

  - name: created_at
    <<: *PropType.DateTime
    access: Read-only
    comment: |
      The time at which this project was created.

  - name: followers
    <<: *PropType.UserArray
    access: Read-only
    comment: |
      Array of users following this project.

  - name: modified_at
    <<: *PropType.DateTime
    access: Read-only
    comment: |
      The time at which this project was last modified.
    notes:
      - |
        This does not currently reflect any changes in associations such as tasks
        or comments that may have been added or removed from the project.

  - name: name
    <<: *PropType.ProjectName
    comment: |
      Name of the project. This is generally a short sentence fragment that fits
      on a line in the UI for maximum readability. However, it can be longer.

  - name: color
    <<: *PropType.ProjectColor
    comment: |
      Color of the project. Must be either 'null' or one of: 'dark-pink',
      'dark-green', 'dark-blue', 'dark-red', 'dark-teal', 'dark-brown',
      'dark-orange', 'dark-purple', 'dark-warm-gray', 'light-pink', 'light-green',
      'light-blue', 'light-red', 'light-teal', 'light-yellow', 'light-orange',
      'light-purple', 'light-warm-gray'.

  - name: notes
    <<: *PropType.ProjectNotes
    comment: |
      More detailed, free-form textual information associated with the project.

  - name: workspace
    <<: *PropType.Workspace
    comment: |
      The workspace or organization this project is associated with. Once created,
      projects cannot be moved to a different workspace. This attribute can only
      be specified at creation time.

  - name: team
    <<: *PropType.Team
    comment: |
      The team that this project is shared with. This field only exists for
      projects in organizations.

actions:

  # Create, Retrieve, Update, Delete

  - name: create
    method: POST
    path: "/projects"
    params:
      - name: workspace
        <<: *Param.WorkspaceId
        required: true
        comment: The workspace or organization to create the project in.
      - name: team
        <<: *Param.TeamId
        comment: |
          If creating in an organization, the specific team to create the
          project in.
    comment: |
      Creates a new project in a workspace or team.

      Every project is required to be created in a specific workspace or
      organization, and this cannot be changed once set. Note that you can use
      the `workspace` parameter regardless of whether or not it is an
      organization.

      If the workspace for your project _is_ an organization, you must also
      supply a `team` to share the project with.

      Returns the full record of the newly created project.

  - name: createInWorkspace
    method: POST
    path: "/workspaces/%d/projects"
    params:
      - name: workspace
        <<: *Param.WorkspaceId
        required: true
        comment: The workspace or organization to create the project in.
    comment: |
      If the workspace for your project _is_ an organization, you must also
      supply a `team` to share the project with.

      Returns the full record of the newly created project.

  - name: createInTeam
    method: POST
    path: "/teams/%d/projects"
    params:
      - name: team
        <<: *Param.TeamId
        required: true
        comment: The team to create the project in.
    comment: |
      Creates a project shared with the given team.

      Returns the full record of the newly created project.

  - name: findById
    method: GET
    path: "/projects/%d"
    params:
      - name: project
        <<: *Param.ProjectId
        required: true
        comment: The project to get.
    comment: |
      Returns the complete project record for a single project.

  - name: update
    method: PUT
    path: "/projects/%d"
    params:
      - name: project
        <<: *Param.ProjectId
        required: true
        comment: The project to update.
    comment: |
      A specific, existing project can be updated by making a PUT request on the
      URL for that project. Only the fields provided in the `data` block will be
      updated; any unspecified fields will remain unchanged.

      When using this method, it is best to specify only those fields you wish
      to change, or else you may overwrite changes made by another user since
      you last retrieved the task.

      Returns the complete updated project record.

  - name: delete
    method: DELETE
    path: "/projects/%d"
    params:
      - name: project
        <<: *Param.ProjectId
        required: true
        comment: The project to delete.
    comment: |
      A specific, existing project can be deleted by making a DELETE request
      on the URL for that project.

      Returns an empty data record.

  - name: findAll
    method: GET
    path: "/projects"
    collection: true
    comment: |
      Returns the compact project records for some filtered set of projects.
      Use one or more of the parameters provided to filter the projects returned.
    params:
      - name: workspace
        <<: *Param.WorkspaceId
        comment: The workspace or organization to filter projects on.
      - name: team
        <<: *Param.TeamId
        comment: The team to filter projects on.
      - name: archived
        <<: *Param.Bool
        comment: |
          Only return projects whose `archived` field takes on the value of
          this parameter.

  - name: findByWorkspace
    method: GET
    path: "/workspaces/%d/projects"
    params:
      - name: workspace
        <<: *Param.WorkspaceId
        required: true
        comment: The workspace or organization to find projects in.
      - name: archived
        <<: *Param.Bool
        comment: |
          Only return projects whose `archived` field takes on the value of
          this parameter.
    collection: true
    comment: |
      Returns the compact project records for all projects in the workspace.

  - name: findByTeam
    method: GET
    path: "/teams/%d/projects"
    params:
      - name: team
        <<: *Param.TeamId
        required: true
        comment: The team to find projects in.
      - name: archived
        <<: *Param.Bool
        comment: |
          Only return projects whose `archived` field takes on the value of
          this parameter.
    collection: true
    comment: |
      Returns the compact project records for all projects in the team.

  # Children

  # TODO: sections
