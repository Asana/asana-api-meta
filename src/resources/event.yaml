---
!include ../includes.yaml
name: event
comment: |
  An _event_ is an object representing a change to a resource that was observed
  by an event subscription.

  In general, requesting events on a resource is faster and subject to higher
  rate limits than requesting the resource itself. Additionally, change events
  bubble up - listening to events on a project would include when stories are
  added to tasks in the project, even on subtasks.

  Establish an initial sync token by making a request with no sync token.
  The response will be a `412` error - the same as if the sync token had
  expired.

  Subsequent requests should always provide the sync token from the immediately
  preceding call.

  Sync tokens may not be valid if you attempt to go 'backward' in the history
  by requesting previous tokens, though re-requesting the current sync token
  is generally safe, and will always return the same results.

  When you receive a `412 Precondition Failed` error, it means that the
  sync token is either invalid or expired. If you are attempting to keep a set
  of data in sync, this signals you may need to re-crawl the data.

  Sync tokens always expire after 24 hours, but may expire sooner, depending on
  load on the service.
properties:

  - name: user
    <<: *PropType.User
    access: Read-only
    comment: |
      The user who triggered the event.
    notes:
      - |
        The event may be triggered by a different user than the subscriber. For
        example, if user A subscribes to a task and user B modified it, the
        event&rsquo;s user will be user B. Note: Some events are generated by the
        system, and will have `null` as the user. API consumers should make sure
        to handle this case.

  - name: resource
    <<: *PropType.Task
    comment: |
      The resource the event occurred on.
    notes:
      - |
        The resource that triggered the event may be different from the one that
        the events were requested for. For example, a subscription to a project
        will contain events for tasks contained within the project.

  - name: type
    <<: *PropType.Type
    values:
      - name: task
        comment: A task.
      - name: project
        comment: A project.
      - name: story
        comment: A story.
    access: Read-only
    comment: |
      The type of the resource that generated the event.
    notes:
      - |
        Currently, only tasks, projects and stories generate events.

  - name: action
    <<: *PropType.Action
    comment: |
      The type of action taken that triggered the event.

  - name: parent
    <<: *PropType.Project
    comment: |
      For added/removed events, the parent that resource was added to or
      removed from. `null` for other event types.

  - name: created_at
    <<: *PropType.DateTime
    access: Read-only
    comment: |
      The timestamp when the event occurred.

action_classes:
  - name: Get events on resource
    url: get-all
    example_keys: ["get-event-on-project"]

actions:

  - name: get
    class: get-all
    method: GET
    path: "/events"
    collection: true
    # Calling get collection isn't quite right since it will add limit=
    no_code: true
    params:
      - name: resource
        <<: *Param.Gid
        required: true
        explicit: true
        comment: |
          A resource ID to subscribe to. The resource can be a task or project.
      - name: sync
        type: String
        explicit: true
        example_values:
          - "'de4774f6915eae04714ca93bb2f5ee81'"
        comment: |
          A sync token received from the last request, or none on first sync.
          Events will be returned from the point in time that the sync token
          was generated.
        notes:
          - |
            On your first request, omit the sync token. The response will be the
            same as for an expired sync token, and will include a new valid
            sync token.
          - |
            If the sync token is too old (which may happen from time to time)
            the API will return a `412 Precondition Failed` error, and include
            a fresh `sync` token in the response.
    comment: |
      Returns the full record for all events that have occurred since the
      sync token was created.
    notes:
      - |
        A GET request to the endpoint `/[path_to_resource]/events` can be made
        in lieu of including the resource ID in the data for the request.
