---
templates:

  # TODO: response codes here, add to action schema set of possible responses

  - template: &Code.200
      value: 200
      comment: |
        Success.

  # Parameters
  
  - template: &Param.DateTime
      type: String
      example_values:
        - "'2012-02-22T02:06:58.158Z'"
        - "now"

  - template: &Param.Bool
    - type: Boolean
      example_values:
        - "false"

  - template: &Param.Id
      type: Id
      example_values:
        - "12345"

  - template: &Param.IdArray
      type: Array
      example_values:
        - "[133713, 184253]"

  - template: &Param.ProjectId
      type: Id
      example_values:
        - "13579"
      comment: |
        Globally unique identifier for the project.

  - template: &Param.TagId
      type: Id
      example_values:
        - "11235"
      comment: |
        Globally unique identifier for the tag.

  - template: &Param.TaskId
      type: Id
      example_values:
        - "124816"
      comment: |
        Globally unique identifier for the task.

  - template: &Param.UserId
      type: Id
      example_values:
        - "14641"
      comment: |
        Globally unique identifier for the user.

  - template: &Param.WorkspaceId
      type: Id
      example_values:
        - "1331"
      comment: |
        Globally unique identifier for the workspace or organization.

  - template: &Param.AttachmentId
      type: Id
      example_values:
        - "12357"
      comment: |
        Globally unique identifier for the attachment.

  - template: &Param.TeamId
      type: Id
      example_values:
        - "14916"
      comment: |
        Globally unique identifier for the team.

  - template: &Param.StoryId
      type: Id
      example_values:
        - "182764"
      comment: |
        Globally unique identifier for the story.

  # Types of properties

  - template: &PropType.Id
    - type: Id
      example_values:
        - "1234"
      access: Read-only

  - template: &PropType.Bool
    - type: Boolean
      example_values:
        - "false"

  - template: &PropType.Count
    - type: Integer
      example_values:
        - "5"

  - template: &PropType.User
    - type: User
      example_values:
        - "{ id: 12345, name: 'Tim Bizarro' }"
        - "null"

  - template: &PropType.UserArray
    - type: Array
      example_values:
        - "[ { id: 1123, name: 'Mittens' }, ... ]"

  - template: &PropType.DateTime
    - type: String
      example_values:
        - "'2012-02-22T02:06:58.147Z'"

  - template: &PropType.Date
    - type: String
      example_values:
        - "'2012-03-26'"

  - template: &PropType.Workspace
    - type: Workspace
      example_values:
        - "{ id: 14916, name: 'My Workspace' }"
      access: Create-only

  - template: &PropType.Task
    - type: Task
      example_values:
        - "{ id: 1234, name: 'Bug task' }"
      access: Read-only

  - template: &PropType.Project
    - type: Project
      example_values:
        - "{ id: 1234, name: 'Bugs' }"
      access: Read-only

  # Leave it to the comment to specify all possible types
  - template: &PropType.Type
    - type: String
      example_values:
        - "'task'"

  # By resource - organized like this for neatness, but proptypes can be used anywhere

  ## User
  - template: &PropType.Email
    - type: String
      example_values:
        - "'gsanchez@example.com'"
      access: Read-only

  - template: &PropType.Photo
    - type: Struct
      example_values:
        - "{ 'image_21x21': 'https://...', ... }"
      access: Read-only

  - template: &PropType.WorkspaceArray
    - type: Array
      example_values:
        - "[ { id: 14916, name: 'My Workspace' }, ... ]"
      access: Read-only

  ## Task
  - template: &PropType.AssigneeStatus
    - type: Enum
      example_values:
        - "'upcoming'"
      values:
        - name: inbox
          comment: In the inbox.
        - name: later
          comment: Scheduled for _later_.
        - name: upcoming
          comment: Scheduled for _upcoming_.
        - name: today
          comment: Scheduled for _today_.

  - template: &PropType.External
    - type: Map
      example_values:
        - "{ id: 'my_id', data: 'A blob of information.' }"
      access: Oauth Required

  - template: &PropType.ProjectArray
    - type: Array
      example_values:
        - "[ { id: 1331, name: 'Stuff to Buy' }, ... ]"
      access: Create-only

  - template: &PropType.Memberships
    - type: Array
      example_values:
        - "[ { project: { id: 1331, name: 'Bugs' }, section: { id: 1123, name: 'P1:' } }, ... ]"
      access: Create-only

  ## Project/Tag
  - template: &PropType.PotName
    - type: String
      example_values:
        - "'Stuff to buy'"

  - template: &PropType.PotColor
    - type: Enum
      example_values:
        - "'dark-purple'"

  - template: &PropType.PotNotes
    - type: String
      example_values:
        - "'These are things we need to purchase.'"

  - template: &PropType.Team
    - type: Team
      example_values:
        - "{ id: 692353, name: 'organization.com Marketing' }"
      access: Create-only

  ## Story
  - template: &PropType.HtmlText
    - type: String
      example_values:
        - "'Get whatever <a href='https://app.asana.com/0/1123/1234'> Sashimi </a> has.'"
      access: Read-only

  - template: &PropType.StorySource
    - type: Enum
      example_values:
        - "'web'"
      values:
        - name: web
          comment: Via the Asana web app.
        - name: email
          comment: Via email.
        - name: mobile
          comment: Via the Asana mobile app.
        - name: api
          comment: Via the Asana API.
        - name: unknown
          comment: Unknown or unrecorded.
      access: Read-only

  - template: &PropType.StoryType
    - type: Enum
      example_values:
        - "'comment'"
      values:
        - name: comment
          comment: A comment from a user. The text will be the message portion of the comment.
        - name: system
          comment:  A system-generated story based on a user action. The text will be a description of the action.
      access: Read-only

  ## Events
  - template: &PropType.Action
    - type: Enum
      example_values:
        - "'changed'"
      values:
        - name: changed
          comment: A resource was changed.
        - name: added
          comment: A resource was added.
        - name: removed
          comment: A resource was removed.
        - name: deleted
          comment: A resource was deleted.
        - name: undeleted
          comment: A resource was undeleted.
      access: Read-only

  # Full actions that are duplicated across resources, i.e. more than one
  # way of doing something.
  
  - template: &Action.CommentOnTask
      method: POST
      path: "/tasks/%s/stories"
      params:
        - name: task
          <<: *Param.TaskId
          required: true
        - name: text
          type: String
          example_values:
            - "'This is a comment.'"
          required: true
          comment: The plain text of the comment to add.
      comment: |
        Adds a comment to a task. The comment will be authored by the
        currently authenticated user, and timestamped when the server receives
        the request.

        Returns the full record for the new story added to the task.
