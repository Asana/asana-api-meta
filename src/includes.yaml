---
templates:

  # TODO: response codes here, add to action schema set of possible responses

  - template: &Code.200
      value: 200
      comment: |
        Success.

  # Parameters

  - template: &Param.DateTime
      type: String
      example_values:
        - "'2012-02-22T02:06:58.158Z'"
        - "now"

  - template: &Param.Bool
    - type: Boolean
      example_values:
        - "false"

  - template: &Param.Id
      type: Id
      example_values:
        - "12345"

  - template: &Param.Gid
      type: Gid
      example_values:
        - '"12345"'

  - template: &Param.JobGid
      type: Gid
      example_values:
        - '"124816"'
      comment: |
        Globally unique identifier for the job.

  - template: &Param.Number
    - type: Integer
      example_values:
        - "2"

  - template: &Param.IdArray
      type: Array
      example_values:
        - "[133713, 184253]"

  - template: &Param.GidArray
      type: Array
      example_values:
        - '["133713", "184253"]'

  - template: &Param.PortfolioGid
      type: Gid
      example_values:
        - '"36985"'
      comment: |
        Globally unique identifier for the portfolio.

  - template: &Param.PortfolioName
      type: String
      example_values:
        - '"Product launch"'

  - template: &Param.PortfolioColor
      type: String
      example_values:
        - '"dark-red"'
        - '"light-blue"'
        - '"none"'

  - template: &Param.ProjectId
      type: Id
      example_values:
        - "13579"
      comment: |
        Globally unique identifier for the project.

  - template: &Param.ProjectGid
      type: Gid
      example_values:
        - '"13579"'
      comment: |
        Globally unique identifier for the project.

  - template: &Param.PortfolioId
      type: Id
      example_values:
        - "26367"
      comment: |
        Globally unique identifier for the portfolio.

  - template: &Param.PortfolioGid
      type: Gid
      example_values:
        - '"26367"'
      comment: |
        Globally unique identifier for the portfolio.


  - template: &Param.ProjectMembershipId
      type: Id
      example_values:
        - "34729"
      comment: |
        Globally unique identifier for the project membership.

  - template: &Param.ProjectMembershipGid
      type: Gid
      example_values:
        - '"34729"'
      comment: |
        Globally unique identifier for the project membership.

  - template: &Param.PortfolioMembershipId
      type: Id
      example_values:
        - "34729"
      comment: |
        Globally unique identifier for the portfolio membership.

  - template: &Param.PortfolioMembershipGid
      type: Gid
      example_values:
        - '"34729"'
      comment: |
        Globally unique identifier for the portfolio membership.

  - template: &Param.ProjectStatusUpdateId
      type: Id
      example_values:
        - "13597"
      comment: |
        Globally unique identifier for the project status update.

  - template: &Param.ProjectStatusUpdateGid
      type: Gid
      example_values:
        - '"13597"'
      comment: |
        Globally unique identifier for the project status update.

  - template: &Param.ProjectStatusColor
      type: String
      comment: The color of the project status update.
      example_values:
        - "'green'"
        - "'yellow'"
        - "'red'"

  - template: &Param.ResourceSubtype
      type: Enum
      comment: The resource subtype of the object.

  - template: &Param.TagId
      type: Id
      example_values:
        - "11235"
      comment: |
        Globally unique identifier for the tag.

  - template: &Param.TagGid
      type: Gid
      example_values:
        - '"11235"'
      comment: |
        Globally unique identifier for the tag.

  - template: &Param.SectionId
      type: Id
      example_values:
        - "97531"
      comment: |
        Globally unique identifier for the section.

  - template: &Param.SectionGid
      type: Gid
      example_values:
        - '"97531"'
      comment: |
        Globally unique identifier for the section.

  - template: &Param.TaskId
      type: Id
      example_values:
        - "124816"
      comment: |
        Globally unique identifier for the task.

  - template: &Param.TaskGid
      type: Gid
      example_values:
        - '"124816"'
      comment: |
        Globally unique identifier for the task.

  - template: &Param.User
      type: String
      example_values:
        - '"14641"'
        - '"me"'
        - '"sashimi@asana.com"'
      comment: |
        An identifier for the user. Can be one of an email address,
        the globally unique identifier for the user, or the keyword `me`
        to indicate the current user making the request.

  - template: &Param.UserTaskListGid
      type: Gid
      example_values:
        - '"16284"'
      comment: |
        Globally unique identifier for the user task list.

  - template: &Param.WorkspaceId
      type: Id
      example_values:
        - '"1331"'
      comment: |
        Globally unique identifier for the workspace or organization.

  - template: &Param.WorkspaceGid
      type: Gid
      example_values:
        - '"1331"'
      comment: |
        Globally unique identifier for the workspace or organization.

  - template: &Param.AttachmentId
      type: Id
      example_values:
        - "12357"
      comment: |
        Globally unique identifier for the attachment.

  - template: &Param.AttachmentGid
      type: Gid
      example_values:
        - '"12357"'
      comment: |
        Globally unique identifier for the attachment.

  - template: &Param.TeamId
      type: Id
      example_values:
        - "14916"
      comment: |
        Globally unique identifier for the team.

  - template: &Param.TeamGid
      type: Gid
      example_values:
        - '"14916"'
      comment: |
        Globally unique identifier for the team.

  - template: &Param.StoryId
      type: Id
      example_values:
        - "182764"
      comment: |
        Globally unique identifier for the story.

  - template: &Param.StoryGid
      type: Gid
      example_values:
        - '"182764"'
      comment: |
        Globally unique identifier for the story.

  - template: &Param.Target
    - type: String
      example_values:
        - "'https://example.com/receive-webhook/7654'"

  - template: &Param.CustomFieldId
      type: Id
      example_values:
        - "124578"
      comment: |
        Globally unique identifier for the custom field.

  - template: &Param.CustomFieldGid
      type: Gid
      example_values:
        - '"124578"'
      comment: |
        Globally unique identifier for the custom field.

  - template: &Param.CustomFieldSettingsId
    - type: Id
      example_values:
        - "258147"
      comment: |
        The id of the custom field setttings object which represents the joining of a custom field and a project. Note that this ID is not the same as the ID of the custom field itself.

  - template: &Param.CustomFieldSettingsGid
    - type: Gid
      example_values:
        - '"258147"'
      comment: |
        The id of the custom field setttings object which represents the joining of a custom field and a project. Note that this ID is not the same as the ID of the custom field itself.

  - template: &Param.CustomFieldEnumValue
    - type: String
      example_values:
        - "[ { id: 1646, gid: \"1646\", name: 'Priority', type: 'enum', enum_value: { id: 126, gid: \"1646\", name: 'P1' } ]"

  - template: &Param.CustomFieldEnumOptions
    - type: String
    - comment: The discrete values the custom field can assume. Required if the custom field is of type 'enum'.
      example_values:
        - "[ { name: 'Low', color: 'blue' }, { name: 'Medium', color: 'yellow' }, { name: 'High', color: 'red' } ]"

  - template: &Param.CustomFieldName
    - type: String
    - comment: The name of the custom field.
      example_values:
        - "'Priority'"

  - template: &Param.CustomFieldPrecision
    - type: Integer
    - comment: The number of decimal places for the numerical values. Required if the custom field is of type 'number'.
      example_values:
        - "2"

  - template: &Param.CustomFieldDescription
    - type: String
    - comment: The description of the custom field.
      example_values:
        - "'Development team priority'"

  - template: &Param.CustomFieldType
    - type: String
    - comment: The type of the custom field. Must be one of the given values.
      example_values:
        - '"text"'
        - '"enum"'
        - '"number"'

  - template: &Param.CustomFieldEnumOptionId
      type: Id
      example_values:
        - "97285"
      comment: |
        Globally unique identifier for the enum option.

  - template: &Param.CustomFieldEnumOptionGid
      type: Gid
      example_values:
        - '"97285"'
      comment: |
        Globally unique identifier for the enum option.

  - template: &Param.CustomFieldEnumOptionName
    - type: String
    - comment: The name of the enum option.
      example_values:
        - "'High'"
        - "'Low'"

  - template: &Param.CustomFieldEnumOptionColor
    - type: String
    - comment: The color of the enum option. Defaults to 'none'.
      example_values:
        - "'red'"
        - "'blue'"

  - template: &Param.SectionName
    - type: String
    - comment: "The name of the section"
      example_values:
        - "'Next Actions'"

  - template: &Param.ProjectIncludes
      type: Array
      example_values:
        - '[ "members", "notes", "task_notes", "task_assignee", "task_subtasks", "task_attachments", "task_dates", "task_dependencies", "task_followers", "task_tags", "task_projects" ]'

  - template: &Param.TaskIncludes
      type: Array
      example_values:
        - '[ "notes", "assignee", "subtasks", "attachments", "tags", "followers", "projects", "dates", "dependencies", "parent" ]'

  - template: &Param.DuplicateScheduleDates
      - type: String
        example_values:
          - "{ should_skip_weekends: true, due_on: '2019-05-21' }"

  # Types of properties

  - template: &PropType.Id
    - type: Id
      example_values:
        - "1234"
      access: Read-only

  - template: &PropType.Gid
    - type: Gid
      example_values:
        - '"1234"'
      access: Read-only

  - template: &PropType.Resource
    - type: Resource
      example_values:
        - '{ id: 1234, gid: "1234" }'
      access: Read-only

  - template: &PropType.ResourceArray
    - type: Resource
      example_values:
        - '[ { id: 1234, gid: "1234" }, ... ]'
      access: Read-only

  - template: &PropType.Bool
    - type: Boolean
      example_values:
        - "false"

  - template: &PropType.Count
    - type: Integer
      example_values:
        - "5"

  - template: &PropType.User
    - type: User
      example_values:
        - "{ id: 12345, gid: \"12345\", resource_type: \"user\", name: 'Tim Bizarro' }"
        - "null"

  - template: &PropType.UserArray
    - type: Array
      example_values:
        - "[ { id: 1123, gid: \"1123\", resource_type: \"user\", name: 'Mittens' }, ... ]"

  - template: &PropType.DateTime
    - type: String
      example_values:
        - "'2012-02-22T02:06:58.147Z'"

  - template: &PropType.Date
    - type: String
      example_values:
        - "'2012-03-26'"

  - template: &PropType.Workspace
    - type: Workspace
      example_values:
        - "{ id: 14916, gid: \"14916\", name: 'My Workspace' }"
      access: Create-only

  - template: &PropType.Task
    - type: Task
      example_values:
        - "{ id: 1234, gid: \"1234\", name: 'Bug task' }"
      access: Read-only

  - template: &PropType.Portfolio
      - type: Project
        example_values:
          - "{ id: 1234, gid: \"1234\", name: 'Progress Tracking' }"
        access: Read-only

  - template: &PropType.Project
    - type: Project
      example_values:
        - "{ id: 1234, gid: \"1234\", name: 'Bugs' }"
      access: Read-only

  # Leave it to the comment to specify all possible types
  - template: &PropType.Type
    - type: String
      example_values:
        - "'task'"

  # By resource - organized like this for neatness, but proptypes can be used anywhere

  ## User
  - template: &PropType.Email
    - type: String
      example_values:
        - "'gsanchez@example.com'"
      access: Read-only

  - template: &PropType.Photo
    - type: Struct
      example_values:
        - "{ 'image_21x21': 'https://...', ... }"
      access: Read-only

  - template: &PropType.WorkspaceArray
    - type: Array
      example_values:
        - "[ { id: 14916, gid:\"14916\" name: 'My Workspace' }, ... ]"
      access: Read-only

  ## Task
  - template: &PropType.AssigneeStatus
    - type: Enum
      example_values:
        - '"inbox"'
        - '"today"'
        - '"upcoming"'
        - '"later"'
      values:
        - name: inbox
          comment: In the inbox.
        - name: later
          comment: Scheduled for _later_.
        - name: upcoming
          comment: Scheduled for _upcoming_.
        - name: today
          comment: Scheduled for _today_.

  - template: &PropType.External
    - type: Map
      example_values:
        - "{ id: 'my_id', data: 'A blob of information.' }"
      access: Oauth Required

  - template: &PropType.ProjectArray
    - type: Array
      example_values:
        - "[ { id: 1331, gid: \"1331\", name: 'Stuff to Buy' }, ... ]"
      access: Create-only

  - template: &PropType.ObjectArray
    - type: Array
      example_values:
        - "[ { id: 59746, gid:\"59746\", name: 'Grade A' }, ... ]"
      access: Create-only

      # The custom field metadata that exists in a workspace
  - template: &PropType.CustomField
    - type: CustomField
      example_values:
        - "{ id: 1646, gid: \"1646\", name: 'Priority', type: 'enum' }"

      # The custom field values on a task (for custom fields on a project), a project (for custom fields in a portfolio), or a portfolio (for custom fields on a parent portfolio)
  - template: &PropType.CustomFieldValuesArray
    - type: Array
      example_values:
        - "[ { id: 1646, gid: \"1646\", name: 'Priority', type: 'enum', enum_value: { id: 126, gid: \"126\", name: 'P1' } }, ...]"

  - template: &PropType.CustomFieldSettingsCompactArray
    - type: Array
      example_values:
        - "[ { id: 258147, gid: \"258147\", custom_field: {id: 1646, gid: \"1646\", name: 'Priority', type: 'enum'}, project: {id: 13309, gid: \"13309\", name: 'Bugs'} }, ...]"

  - template: &PropType.PortfolioCustomFieldSettingsCompactArray
    - type: Array
      example_values:
        - '[ { id: 258147, gid: "258147", custom_field: {id: 1646, gid: "1646", name: "Priority", type: "enum"}, parent: {id: 36985, gid: "36985", name: "Product launch"} }, ...]'

  - template: &PropType.CustomFieldSettingsParent
    - type: String
      example_values:
        - '{id: 29485, gid: "29485", name: "Marketing steps", resource_type: "project"}'
        - '{id: 36985, gid: "36985", name: "Product launch", resource_type: "portfolio"}'

  - template: &PropType.CustomFieldPrecision
    - type: Integer
      example_values:
        - "2"

  - template: &PropType.CustomFieldName
    - type: String
      example_values:
        - "'Priority'"

  - template: &PropType.CustomFieldDescription
    - type: String
      example_values:
        - "'Development team priority'"

  - template: &PropType.CustomFieldType
    - type: String
      example_values:
        - "'text'"
        - "'enum'"
        - "'number'"

  - template: &PropType.CustomFieldEnumOptions
    - type: String
      example_values:
        - "[ { id: 789, gid: \"789\", name: 'Low', enabled: 'true', color: 'blue' }, ... ]"

  - template: &PropType.Memberships
    - type: Array
      example_values:
        - "[ { project: { id: 1331, gid: \"1331\", name: 'Bugs' }, section: { id: 1123, gid: \"1123\", name: 'P1:' } }, ... ]"
      access: Create-only

  ## Portfolio
  - template: &PropType.PortfolioName
    - type: String
      example_values:
        - '"Product launch"'

  - template: &PropType.PortfolioColor
    - type: String
      example_values:
        - '"dark-red"'
        - '"light-blue"'
        - '"none"'

  - template: &PropType.PortfolioOwner
    - type: Struct
      example_values:
        - "{ id: 12345, gid: \"12345\", resource_type: \"user\", name: 'Tim Bizarro' }"

  ## Project/Tag
  - template: &PropType.PotName
    - type: String
      example_values:
        - "'Stuff to buy'"

  - template: &PropType.PotColor
    - type: Enum
      example_values:
        - "'dark-purple'"

  - template: &PropType.PotNotes
    - type: String
      example_values:
        - "'These are things we need to purchase.'"

  - template: &PropType.SectionName
    - type: String
      example_values:
        - "'Next Actions'"

  - template: &PropType.Team
    - type: Team
      example_values:
        - "{ id: 692353, gid: \"692353\", name: 'organization.com Marketing' }"
      access: Create-only

  - template: &PropType.Status
    - type: Struct
      example_values:
        - "{ 'color': 'green', 'title': 'Status Update - Jun 15', ... } "

  - template: &PropType.Layout
    - type: Enum
      example_values:
        - "'board'"
        - "'list'"

  - template: &PropType.WriteAccess
    - type: Enum
      example_values:
        - "'full_write'"
        - "'comment_only'"

  ## Task descriptions, story bodies, project descriptions, project status update bodies, team descriptions
  ## Also eventually conversations
  - template: &PropType.HtmlText
    - type: String
      example_values:
        - "'&lt;body&gt;Get whatever &lt;a href='https://app.asana.com/0/1123/list'&gt;Sashimi&lt;/a&gt; has.&lt;/body&gt;'"
      notes:
        - "**This field is under active migration—please see our [blog post](/developers/news/new-rich-text) for more information.**"

  - template: &PropType.StorySource
    - type: Enum
      example_values:
        - "'web'"
      values:
        - name: web
          comment: Via the Asana web app.
        - name: email
          comment: Via email.
        - name: mobile
          comment: Via the Asana mobile app.
        - name: api
          comment: Via the Asana API.
        - name: unknown
          comment: Unknown or unrecorded.
      access: Read-only

  - template: &PropType.StoryType
    - type: Enum
      example_values:
        - "'comment'"
        - "'system'"
      values:
        - name: comment
          comment: A comment from a user. The text will be the message portion of the comment.
        - name: system
          comment:  A system-generated story based on a user action. The text will be a description of the action.
      access: Read-only

  - template: &PropType.ResourceType
    - type: Enum
      access: Read-only

  - template: &PropType.ResourceSubtype
    - type: Enum
      access: Read-only

  - template: &PropType.JobStatus
    - type: Enum
      access: Read-only

  ## Events
  - template: &PropType.Action
    - type: Enum
      example_values:
        - "'changed'"
      values:
        - name: changed
          comment: A resource was changed.
        - name: added
          comment: A resource was added.
        - name: removed
          comment: A resource was removed.
        - name: deleted
          comment: A resource was deleted.
        - name: undeleted
          comment: A resource was undeleted.
      access: Read-only

  ## Webhooks
  - template: &PropType.Target
    - type: String
      example_values:
        - "'https://example.com/receive-webhook/7654'"

  - template: &PropType.FailureContent
    - type: String
      example_values:
        - "'500 Server Error\\n\\nCould not complete the request'"

  # Full actions that are duplicated across resources, i.e. more than one
  # way of doing something.

  - template: &Action.CommentOnTask
      method: POST
      path: "/tasks/%s/stories"
      params:
        - name: task
          <<: *Param.TaskId
          required: true
        - name: text
          type: String
          example_values:
            - "'This is a comment.'"
          required: true
          comment: The plain text of the comment to add.
      comment: |
        Adds a comment to a task. The comment will be authored by the
        currently authenticated user, and timestamped when the server receives
        the request.

        Returns the full record for the new story added to the task.
